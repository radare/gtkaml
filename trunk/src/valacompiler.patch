--- valacompiler.vala	Mon Mar 24 16:53:21 2008
+++ GtkamlCompiler.vala	Wed Apr  9 11:22:40 2008
@@ -1,5 +1,5 @@
-/* valacompiler.vala
- *
+/* GtkamlCompiler.vala
+ * 
  * Copyright (C) 2006-2008  Jürg Billeter
  * Copyright (C) 1996-2002, 2004, 2005, 2006 Free Software Foundation, Inc.
  *
@@ -19,11 +19,13 @@
  *
  * Author:
  * 	Jürg Billeter <j@bitron.ch>
+ * 	Vlad Grecescu (b100dian@gmail.com)
  */
 
 using GLib;
+using Vala;
 
-class Vala.Compiler : Object {
+class Gtkaml.Compiler : Object {
 	static string basedir;
 	static string directory;
 	static bool version;
@@ -34,6 +36,7 @@
 	static string library;
 	[NoArrayLength ()]
 	static string[] packages;
+	static string[] implicits_directories; 
 
 	static bool ccode_only;
 	static bool compile_only;
@@ -73,6 +76,7 @@
 		{ "cc", 0, 0, OptionArg.STRING, out cc_command, "Use COMMAND as C compiler command", "COMMAND" },
 		{ "Xcc", 'X', 0, OptionArg.STRING_ARRAY, out cc_options, "Pass OPTION to the C compiler", "OPTION..." },
 		{ "save-temps", 0, 0, OptionArg.NONE, out save_temps, "Keep temporary files", null },
+		{ "implicitsdir", 0, 0, OptionArg.FILENAME_ARRAY, out implicits_directories, "Look for implicit add and creation methods and their parameters in DIRECTORY", "DIRECTORY..." },
 		{ "quiet", 'q', 0, OptionArg.NONE, ref quiet_mode, "Do not print messages to the console", null },
 		{ "verbose", 'v', 0, OptionArg.NONE, ref verbose, "Include the source line text when reporting errors or warnings." },
 		{ "", 0, 0, OptionArg.FILENAME_ARRAY, out sources, null, "FILE..." },
@@ -193,6 +197,8 @@
 				var rpath = realpath (source);
 				if (source.has_suffix (".vala")) {
 					context.add_source_file (new SourceFile (context, rpath));
+				} else if (source.has_suffix (".gtkaml")) {
+					context.add_source_file (new SourceFile (context, rpath));
 				} else if (source.has_suffix (".vapi")) {
 					context.add_source_file (new SourceFile (context, rpath, true));
 				} else if (source.has_suffix (".c")) {
@@ -210,8 +216,8 @@
 			return quit ();
 		}
 		
-		var parser = new Parser ();
-		parser.parse (context);
+		var parser = new Gtkaml.Parser ();
+		parser.parse (context, implicits_directories);
 		
 		if (Report.get_errors () > 0) {
 			return quit ();
@@ -372,7 +378,7 @@
 
 	static int main (string[] args) {
 		try {
-			var opt_context = new OptionContext ("- Vala Compiler");
+			var opt_context = new OptionContext ("- Vala Gtkaml Compiler");
 			opt_context.set_help_enabled (true);
 			opt_context.add_main_entries (options, null);
 			opt_context.parse (ref args);
@@ -383,7 +389,7 @@
 		}
 		
 		if (version) {
-			stdout.printf ("Vala %s\n", Config.PACKAGE_VERSION);
+			stdout.printf ("Gtkaml %s (based on Vala 0.2.0)\n", Config.PACKAGE_VERSION);
 			return 0;
 		}
 		
